<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AttachmentsBadInputParamsError" xml:space="preserve">
    <value>Some input parameters are invalid.</value>
  </data>
  <data name="AttachmentsDocumentAccessDeniedError" xml:space="preserve">
    <value>Access to the document is denied.</value>
  </data>
  <data name="AttachmentsDocumentNotFoundError" xml:space="preserve">
    <value>Document could not be found or does not exist on the chosen storage.</value>
  </data>
  <data name="AttachmentsEmptyFileNotSupportedError" xml:space="preserve">
    <value>Empty files are not supported.</value>
  </data>
  <data name="AttachmentsMessageNotFoundError" xml:space="preserve">
    <value>Message could not be found.</value>
  </data>
  <data name="AttachmentsTotalLimitError" xml:space="preserve">
    <value>Total size of all attachments exceeds limit.</value>
  </data>
  <data name="AttachmentsUnknownError" xml:space="preserve">
    <value>Some unexpected error has occurred. Please try again later.</value>
  </data>
  <data name="DeliveryFailureAutomaticMessage" xml:space="preserve">
    <value>This message was created automatically by mail delivery software.</value>
  </data>
  <data name="DeliveryFailureBtn" xml:space="preserve">
    <value>Change your message</value>
  </data>
  <data name="DeliveryFailureFAQInformation" xml:space="preserve">
    <value>In case the error persists, please read the {url_begin}FAQ section{url_end} to learn more about the problem.</value>
  </data>
  <data name="DeliveryFailureHeaders" xml:space="preserve">
    <value>Message headers follow</value>
  </data>
  <data name="DeliveryFailureMessageIdentificator" xml:space="preserve">
    <value>Delivery failed for message with subject "{subject}" from {date}.</value>
  </data>
  <data name="DeliveryFailureReason" xml:space="preserve">
    <value>Reason</value>
  </data>
  <data name="DeliveryFailureRecipients" xml:space="preserve">
    <value>Message could not be delivered to recipient(s)</value>
  </data>
  <data name="DeliveryFailureRecommendations" xml:space="preserve">
    <value>Please, check your message recipients addresses and message format.  If you are sure your message is correct, check all the {account_name} account settings, and, if everything is correct, sign in to the mail service you use and confirm any verification questions, in case there are some. After then try again.</value>
  </data>
  <data name="DeliveryFailureSubject" xml:space="preserve">
    <value>Message delivery failure</value>
  </data>
  <data name="ErrorEmptyField" xml:space="preserve">
    <value>This field cannot be empty</value>
  </data>
  <data name="ErrorIncorrectEmailAddress" xml:space="preserve">
    <value>Incorrect email address in %1 field</value>
  </data>
  <data name="ErrorTagNameAlreadyExists" xml:space="preserve">
    <value>Tag %1 already exists</value>
  </data>
  <data name="ErrorTagNameCantBeEmpty" xml:space="preserve">
    <value>Tag name cannot be empty</value>
  </data>
  <data name="FieldNameBcc" xml:space="preserve">
    <value>Bcc</value>
  </data>
  <data name="FieldNameCc" xml:space="preserve">
    <value>Cc</value>
  </data>
  <data name="FieldNameFrom" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="FieldNameTo" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="ImapConnectionTimeoutError" xml:space="preserve">
    <value>IMAP server connection timeout exceeded.</value>
  </data>
  <data name="ImapResponse" xml:space="preserve">
    <value>IMAP response:</value>
  </data>
  <data name="Pop3ConnectionTimeoutError" xml:space="preserve">
    <value>POP3 server connection timeout exceeded.</value>
  </data>
  <data name="Pop3Response" xml:space="preserve">
    <value>POP3 response:</value>
  </data>
  <data name="SmtpConnectionTimeoutError" xml:space="preserve">
    <value>SMTP server connection timeout exceeded.</value>
  </data>
  <data name="SmtRresponse" xml:space="preserve">
    <value>SMTP response:</value>
  </data>
  <data name="ErrorUserFoldeNameCantBeEmpty" xml:space="preserve">
    <value>Folder name cannot be empty</value>
  </data>
  <data name="ErrorUserFolderNameAlreadyExists" xml:space="preserve">
    <value>Folder %1 already exists</value>
  </data>
  <data name="CreatingLinkHeader" xml:space="preserve">
    <value>Creating link</value>
  </data>
  <data name="FinishedHeader" xml:space="preserve">
    <value>Finished</value>
  </data>
  <data name="GetAttachmentsHeader" xml:space="preserve">
    <value>Get attachments</value>
  </data>
  <data name="PreparationArchiveHeader" xml:space="preserve">
    <value>Preparation archive</value>
  </data>
  <data name="SetupTenantAndUserHeader" xml:space="preserve">
    <value>Setup tenant and user</value>
  </data>
  <data name="ZippingAttachmentsHeader" xml:space="preserve">
    <value>Zipping attachments</value>
  </data>
  <data name="ClearAccountsCacheHeader" xml:space="preserve">
    <value>Clear accounts cache</value>
  </data>
  <data name="DecreaseQuotaSpaceHeader" xml:space="preserve">
    <value>Decrease newly freed quota space</value>
  </data>
  <data name="RecalculateFoldersCountersHeader" xml:space="preserve">
    <value>Recalculate folders counters</value>
  </data>
  <data name="RemoveElasticSearchIndexMessagesHeader" xml:space="preserve">
    <value>Remove Elastic Search index by messages</value>
  </data>
  <data name="RemoveMailboxFromDbHeader" xml:space="preserve">
    <value>Remove mailbox from Db</value>
  </data>
</root>