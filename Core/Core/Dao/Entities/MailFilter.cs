// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
namespace ASC.Mail.Core.Dao.Entities;

public partial class MailFilter : BaseEntity
{
    public int Id { get; set; }
    public int Tenant { get; set; }
    public string IdUser { get; set; }
    public bool? Enabled { get; set; }
    public string Filter { get; set; }
    public int Position { get; set; }
    public DateTime? DateCreated { get; set; }
    public DateTime DateModified { get; set; }

    public override object[] GetKeys()
    {
        return new object[] { Id };
    }
}

public static class MailFilterExtension
{
    public static ModelBuilderWrapper AddMailFilter(this ModelBuilderWrapper modelBuilder)
    {
        modelBuilder
            .Add(MySqlAddMailFilter, Provider.MySql);

        return modelBuilder;
    }

    public static void MySqlAddMailFilter(this ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<MailFilter>(entity =>
        {
            entity.ToTable("mail_filter");

            entity.HasKey(e => e.Id)
                .HasName("PRIMARY");

            entity.Property(e => e.Id)
                .HasColumnName("id")
                .HasColumnType("int(11)")
                .ValueGeneratedOnAdd();

            entity.Property(e => e.Tenant)
                .HasColumnName("tenant")
                .HasColumnType("int(11)");

            entity.HasIndex(e => new { e.Tenant, e.IdUser })
                .HasDatabaseName("tenant_id_user");

            entity.Property(e => e.DateModified)
                .HasColumnName("date_modified")
                .HasColumnType("timestamp")
                .HasDefaultValueSql("CURRENT_TIMESTAMP")
                .ValueGeneratedOnAddOrUpdate();

            entity.Property(e => e.Enabled)
                .IsRequired()
                .HasColumnName("enabled")
                .HasDefaultValueSql("'1'");

            entity.Property(e => e.Filter)
                .IsRequired()
                .HasColumnName("filter")
                .HasColumnType("text")
                .HasCharSet("utf8")
                .UseCollation("utf8_general_ci");

            entity.Property(e => e.IdUser)
                .IsRequired()
                .HasColumnName("id_user")
                .HasColumnType("varchar(38)")
                .HasCharSet("utf8")
                .UseCollation("utf8_general_ci");

            entity.Property(e => e.Position)
                .HasColumnName("position")
                .HasColumnType("int(11)")
                .HasDefaultValueSql("'0'");

            entity.Property(e => e.DateCreated)
            .HasColumnName("date_created")
            .HasColumnType("timestamp");
        });
    }
}
