// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
namespace ASC.Mail.Core.Dao.Entities;

public partial class MailMailboxAutoreply : BaseEntity
{        
    public int IdMailbox { get; set; }
    public int Tenant { get; set; }
    public bool TurnOn { get; set; }
    public bool OnlyContacts { get; set; }
    public bool TurnOnToDate { get; set; }
    public DateTime FromDate { get; set; }
    public DateTime ToDate { get; set; }
    public string Subject { get; set; }
    public string Html { get; set; }

    public override object[] GetKeys() => new object[] { IdMailbox };
}

public static class MailMailboxAutoreplyExtension
{
    public static ModelBuilder AddMailMailboxAutoreply(this ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<MailMailboxAutoreply>(entity =>
        {
            entity.ToTable("mail_mailbox_autoreply");

            entity.HasKey(e => e.IdMailbox)
                .HasName("PRIMARY");

            entity.Property(e => e.IdMailbox)
                .HasColumnName("id_mailbox")
                .HasColumnType("int(11)");

            entity.HasIndex(e => e.Tenant)
                .HasDatabaseName("tenant");

            entity.Property(e => e.Tenant)
                .HasColumnName("tenant")
                .HasColumnType("int(11)");

            entity.Property(e => e.TurnOn)
                .HasColumnName("turn_on");

            entity.Property(e => e.OnlyContacts)
                .HasColumnName("only_contacts");

            entity.Property(e => e.TurnOnToDate)
                .HasColumnName("turn_on_to_date");

            entity.Property(e => e.FromDate)
                .HasColumnName("from_date")
                .HasColumnType("datetime");

            entity.Property(e => e.ToDate)
                .HasColumnName("to_date")
                .HasColumnType("datetime");

            entity.Property(e => e.Html)
                .HasColumnName("html")
                .HasColumnType("text")
                .HasCharSet("utf8")
                .UseCollation("utf8_general_ci");

            entity.Property(e => e.Subject)
                .HasColumnName("subject")
                .HasColumnType("text")
                .HasCharSet("utf8")
                .UseCollation("utf8_general_ci");
        });

        return modelBuilder;
    }
}
