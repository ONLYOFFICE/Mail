// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
namespace ASC.Mail.Core.Dao.Entities;


public partial class MailTag : BaseEntity, ISearchItem
{
    public int Id { get; set; }
    public int TenantId { get; set; }
    public string IdUser { get; set; }
    public string Name { get; set; }
    public string Style { get; set; }
    public string Addresses { get; set; }
    public int Count { get; set; }
    public int CrmId { get; set; }

    [Ignore]
    public string IndexName => Tables.Tag;

    public Expression<Func<ISearchItem, object[]>> GetSearchContentFields(SearchSettingsHelper searchSettings)
    {
        return (a) => new[] { Name, Addresses };
    }

    public override object[] GetKeys() => new object[] { Id };
}

public static class MailTagExtension
{
    public static ModelBuilder AddMailTag(this ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<MailTag>(entity =>
        {
            entity.ToTable("mail_tag");

            entity.Ignore(r => r.IndexName);

            entity.HasKey(e => e.Id)
                .HasName("PRIMARY");

            entity.Property(e => e.Id)
                .HasColumnName("id")
                .HasColumnType("int(11)")
                .ValueGeneratedOnAdd();

            entity.Property(e => e.TenantId)
                .HasColumnName("tenant")
                .HasColumnType("int(11)");

            entity.HasIndex(e => new { e.TenantId, e.IdUser })
                .HasDatabaseName("username");

            entity.Property(e => e.Addresses)
                .IsRequired()
                .HasColumnName("addresses")
                .HasColumnType("text")
                .HasCharSet("utf8")
                .UseCollation("utf8_general_ci");

            entity.Property(e => e.IdUser)
                .IsRequired()
                .HasColumnName("id_user")
                .HasColumnType("varchar(255)")
                .HasCharSet("utf8")
                .UseCollation("utf8_general_ci");

            entity.Property(e => e.Name)
                .IsRequired()
                .HasColumnName("name")
                .HasColumnType("varchar(255)")
                .HasCharSet("utf8")
                .UseCollation("utf8_general_ci");

            entity.Property(e => e.Style)
                .HasColumnName("style")
                .HasColumnType("varchar(20)")
                .HasCharSet("utf8")
                .UseCollation("utf8_general_ci");

            entity.Property(e => e.Count)
                .HasColumnName("count")
                .HasColumnType("int(10)");

            entity.Property(e => e.CrmId)
                .HasColumnName("crm_id")
                .HasColumnType("int(10)");
        });

        return modelBuilder;
    }
}
