// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using ASC.Core.Common.EF;

using Microsoft.EntityFrameworkCore;
using System;

namespace ASC.Mail.Core.Dao.Entities
{
    public partial class CrmContact : BaseEntity
    {
        public int Id { get; set; }
        public int TenantId { get; set; }
        public bool IsCompany { get; set; }
        public string Notes { get; set; }
        public string Title { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string CompanyName { get; set; }
        public string Industry { get; set; }
        public string DisplayName { get; set; }
        public int StatusId { get; set; }
        public int CompanyId { get; set; }
        public int ContactTypeId { get; set; }
        public string CreateBy { get; set; }
        public DateTime CreateOn { get; set; }
        public DateTime? LastModifedOn { get; set; }
        public string LastModifedBy { get; set; }
        public sbyte? IsShared { get; set; }
        public string Currency { get; set; }

        public override object[] GetKeys() => new object[] { Id };
    }

    public static class CrmContactExtension
    {
        public static ModelBuilder AddCrmContact(this ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<CrmContact>(entity =>
            {
                entity.ToTable("crm_contact");

                entity.HasKey(e => e.Id)
                    .HasName("PRIMARY");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("int(11)")
                    .ValueGeneratedOnAdd();

                entity.HasIndex(e => e.CreateOn)
                    .HasDatabaseName("create_on");

                entity.HasIndex(e => new { e.LastModifedOn, e.TenantId })
                    .HasDatabaseName("last_modifed_on");

                entity.HasIndex(e => new { e.TenantId, e.CompanyId })
                    .HasDatabaseName("company_id");

                entity.HasIndex(e => new { e.TenantId, e.DisplayName })
                    .HasDatabaseName("display_name");

                entity.Property(e => e.TenantId)
                    .HasColumnName("tenant_id")
                    .HasColumnType("int(11)");

                entity.Property(e => e.IsCompany)
                    .HasColumnName("is_company");      
                
                entity.Property(e => e.CompanyName)
                    .HasColumnName("company_name")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.CreateBy)
                    .IsRequired()
                    .HasColumnName("create_by")
                    .HasColumnType("char(38)")
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.Currency)
                    .HasColumnName("currency")
                    .HasColumnType("varchar(3)")
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.DisplayName)
                    .HasColumnName("display_name")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.FirstName)
                    .HasColumnName("first_name")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.Industry)
                    .HasColumnName("industry")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.LastModifedBy)
                    .HasColumnName("last_modifed_by")
                    .HasColumnType("char(38)")
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.LastName)
                .HasColumnName("last_name")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.Notes)
                    .HasColumnName("notes")
                    .HasColumnType("text")
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.Title)
                .HasColumnName("title")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("company_id")
                    .HasColumnType("int(11)");

                entity.Property(e => e.StatusId)
                    .HasColumnName("status_id")
                    .HasColumnType("int(11)");

                entity.Property(e => e.ContactTypeId)
                    .HasColumnName("contact_type_id")
                    .HasColumnType("int(11)");

                entity.Property(e => e.CreateOn)
                    .HasColumnName("create_on")
                    .HasColumnType("datetime");

                entity.Property(e => e.LastModifedOn)
                    .HasColumnName("last_modifed_on")
                    .HasColumnType("datetime");

                entity.Property(e => e.IsShared)
                    .HasColumnName("is_shared")
                    .HasColumnType("tinyint(4)");
            });

            return modelBuilder;
        }
    }
}