// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using ASC.Core.Common.EF;
using Microsoft.EntityFrameworkCore;
using System;

namespace ASC.Mail.Core.Dao.Entities
{
    public partial class MailServerAddress : BaseEntity
    {
        public int Id { get; set; }
        public int Tenant { get; set; }
        public string Name { get; set; }
        public int IdDomain { get; set; }
        public int IdMailbox { get; set; }
        public bool IsMailGroup { get; set; }
        public bool IsAlias { get; set; }
        public DateTime DateCreated { get; set; }

        public override object[] GetKeys() => new object[] { Id };
    }

    public static class MailServerAddressExtension
    {
        public static ModelBuilder AddMailServerAddress(this ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<MailServerAddress>(entity =>
            {
                entity.ToTable("mail_server_address");

                entity.HasKey(e => e.Id)
                    .HasName("PRIMARY");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasColumnType("int(11)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Tenant)
                    .HasColumnName("tenant")
                    .HasColumnType("int(11)");

                entity.HasIndex(e => e.IdDomain)
                    .HasDatabaseName("domain_index");                

                entity.HasIndex(e => e.IdMailbox)
                    .HasDatabaseName("id_mailbox_fk_index");

                entity.Property(e => e.IdDomain)
                    .HasColumnName("id_domain")
                    .HasColumnType("int(11)");

                entity.Property(e => e.IdMailbox)
                    .HasColumnName("id_mailbox")
                    .HasColumnType("int(11)");

                entity.Property(e => e.IsMailGroup)
                    .HasColumnName("is_mail_group")
                    .HasColumnType("int(10)");

                entity.Property(e => e.IsAlias)
                    .HasColumnName("is_alias")
                    .HasColumnType("int(10)")
                    .HasDefaultValueSql("'0'");

                entity.Property(e => e.DateCreated)
                    .HasColumnName("date_created")
                    .HasColumnType("datetime");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("name")
                    .HasColumnType("varchar(64)")
                    .HasCharSet("utf8")
                    .UseCollation("utf8_general_ci");
            });

            return modelBuilder;
        }
    }
}