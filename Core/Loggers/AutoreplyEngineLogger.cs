namespace ASC.Mail.Core.Loggers;

internal static partial class AutoreplyEngineLogger
{
    [LoggerMessage(Level = LogLevel.Information, Message = "DisableAutoreply(MailboxId = {mailboxId}) -> time is over")]
    public static partial void InfoAutoreplyEngineDisableAutoreply(this ILogger logger, int mailboxId);

    [LoggerMessage(Level = LogLevel.Information, Message = "Skip MailAutoreply: FromDate > utcNow")]
    public static partial void InfoAutoreplyEngineSkipAutoreplyUtc(this ILogger logger);

    [LoggerMessage(Level = LogLevel.Information, Message = "Skip MailAutoreply: FromDate > message.Date")]
    public static partial void InfoAutoreplyEngineSkipAutoreplyDate(this ILogger logger);

    [LoggerMessage(Level = LogLevel.Information, Message = "Skip MailAutoreply: found some auto-generated header")]
    public static partial void InfoAutoreplyEngineSkipAutoreplyAutoGeneratedHeader(this ILogger logger);

    [LoggerMessage(Level = LogLevel.Information, Message = "Skip MailAutoreply: message from current account")]
    public static partial void InfoAutoreplyEngineSkipAutoreplyCurrentAccount(this ILogger logger);

    [LoggerMessage(Level = LogLevel.Information, Message = "Skip MailAutoreply: autoreplyEmail not found")]
    public static partial void InfoAutoreplyEngineSkipAutoreplyNotFound(this ILogger logger);

    [LoggerMessage(Level = LogLevel.Information, Message = "Skip MailAutoreply: has group address in TO, CC")]
    public static partial void InfoAutoreplyEngineSkipAutoreplyGroupAddress(this ILogger logger);

    [LoggerMessage(Level = LogLevel.Information, Message = "Skip MailAutoreply: already sent to this address (history)")]
    public static partial void InfoAutoreplyEngineSkipAutoreplyAlreadySent(this ILogger logger);

    [LoggerMessage(Level = LogLevel.Information, Message = "Skip MailAutoreply: message From address is not a part of user's contacts")]
    public static partial void InfoAutoreplyEngineSkipAutoreplyFromAddress(this ILogger logger);

    [LoggerMessage(Level = LogLevel.Information, Message = "AutoreplyEngine -> SendAutoreply: auto-reply message has been sent to '{email}' email")]
    public static partial void InfoAutoreplyEngineSend(this ILogger logger, string email);

    [LoggerMessage(Level = LogLevel.Error, Message = "AutoreplyEngine->SendAutoreply Error: {error}, innerException: {innerError}, account.MailBoxId = {mailboxId}, account.UserId = {userId}, account.TenantId = {tenantId}")]
    public static partial void ErrorAutoreplyEngineSend(this ILogger logger, string error, string innerError, int mailboxId, string userId, int tenantId);
}
